; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
framework = arduino
lib_deps = 
	https://github.com/ravensnight/de.ravensnight.arduino.lib-logging.git#1.4.3
	https://github.com/ravensnight/de.ravensnight.arduino.lib-utils.git#1.4.3

[e32]
platform = espressif32
board = esp32s3usbotg
build_flags =
    -D LOGGING_ENABLED=1

upload_port = /dev/ttyACM1
monitor_port = /dev/ttyACM1
monitor_filters = esp32_exception_decoder
monitor_speed = 115200

[m8]
platform = atmelavr
board = ATmega8
board_build.mcu = atmega8
board_build.f_cpu = 8000000L

upload_port = /dev/ttyACM0
# upload_port = COM9
upload_protocol = stk500
upload_flags = 
    -e 
    -u 
    -b 115200 
    -B 40 
    -P $UPLOAD_PORT 
    -p m8

[env:lib-i2c-esp_host_wire]
platform = ${e32.platform}
board = ${e32.board}
upload_port = ${e32.upload_port}
monitor_port = ${e32.monitor_port}
monitor_filters = ${e32.monitor_filters}
monitor_speed = ${e32.monitor_speed}

build_src_filter = 
    +<host/>
    -<client/> 

build_flags =
    -D ${e32.build_flags}
	-D I2C_WIRE=1

[env:lib-i2c-esp_client_wire]
platform = ${e32.platform}
board = ${e32.board}
upload_port = ${e32.upload_port}
monitor_port = ${e32.monitor_port}
monitor_filters = ${e32.monitor_filters}
monitor_speed = ${e32.monitor_speed}

build_src_filter = 
    -<host/>
    +<client/> 

build_flags =
    -D LOGGING_ENABLED=1
	-D I2C_WIRE=1

[env:lib-i2c-m8_host_wire]
platform = ${m8.platform}
board = ${m8.board}
board_build.mcu = ${m8.board_build.mcu}
board_build.f_cpu = ${m8.board_build.f_cpu}
upload_port = ${m8.upload_port}
upload_protocol = ${m8.upload_protocol}
upload_flags = ${m8.upload_flags}

build_src_filter = 
    +<host/>
    -<client/> 

build_flags =
	-D I2C_WIRE=1


[env:lib-i2c-m8_host_avr]
platform = ${m8.platform}
board = ${m8.board}
board_build.mcu = ${m8.board_build.mcu}
board_build.f_cpu = ${m8.board_build.f_cpu}
upload_port = ${m8.upload_port}
upload_protocol = ${m8.upload_protocol}
upload_flags = ${m8.upload_flags}

build_flags =
	-D I2C_AVR=1

build_src_filter = 
    +<host/>
    -<client/>


[env:lib-i2c_m8_client_wire]
platform = ${m8.platform}
board = ${m8.board}
board_build.mcu = ${m8.board_build.mcu}
board_build.f_cpu = ${m8.board_build.f_cpu}
upload_port = ${m8.upload_port}
upload_protocol = ${m8.upload_protocol}
upload_flags = ${m8.upload_flags}

build_flags =
	-D I2C_WIRE=1

build_src_filter = 
    +<client/>
    -<host/>    

[env:lib-i2c_m8_client_avr]
platform = ${m8.platform}
board = ${m8.board}
board_build.mcu = ${m8.board_build.mcu}
board_build.f_cpu = ${m8.board_build.f_cpu}
upload_port = ${m8.upload_port}
upload_protocol = ${m8.upload_protocol}
upload_flags = ${m8.upload_flags}

build_flags =
	-D I2C_AVR=1

build_src_filter = 
    +<client/> 
    -<host/>    
